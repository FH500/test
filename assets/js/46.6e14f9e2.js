(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{408:function(t,a,s){"use strict";s.r(a);var e=s(14),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"变量与类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量与类型"}},[t._v("#")]),t._v(" 变量与类型")]),t._v(" "),a("h2",{attrs:{id:"变量的定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量的定义"}},[t._v("#")]),t._v(" 变量的定义")]),t._v(" "),a("p",[t._v("解决问题时必然涉及到数据处理，而数据处理又必然离不开数据存储。在计算机中，使用一种名叫变量的东西来存储数据。")]),t._v(" "),a("p",[t._v("我们可以使用以下的语句来定义，或者说创建一个变量。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("在这里，我们创建了一个变量，其名字为 "),a("code",[t._v("a")]),t._v(" ，定义并创建好变量以后，你就可以在之后通过变量的名字来调用这个变量了。"),a("code",[t._v("int")]),t._v(" 表明我们创建的变量的类型为 "),a("code",[t._v("int")]),t._v(" 型，如果你不知道类型是什么也完全不用担心，我们马上就会介绍。最后，千万别忘了语句最后的分号 "),a("code",[t._v(";")]),t._v(" 。")]),t._v(" "),a("p",[a("strong",[t._v("一般地，变量的定义语句如下")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("T name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其中 "),a("code",[t._v("T")]),t._v(" 为变量的类型，"),a("code",[t._v("name")]),t._v(" 为变量的名字。")]),t._v(" "),a("p",[t._v("在定义变量的同时，我们通常会赋予其一个初始值，这叫做"),a("strong",[t._v("初始化")]),t._v("。下面的例子演示了如何在定义变量的同时进行初始化。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("C/C++ 中遵循先定义，后使用的规则。在使用变量前，你必须先进行声明，否则编译器将会报错。下面就是一个错误实例。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在这里，编译器抛出了一个错误：")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//this declaration has no storage class or type specifier")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("声明多个"),a("strong",[t._v("同类型的")]),t._v("变量时，你可以类似下面将他们放在一起，用逗号 "),a("code",[t._v(",")]),t._v("，从而省略掉一些代码。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//相当于")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"变量的命名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量的命名"}},[t._v("#")]),t._v(" 变量的命名")]),t._v(" "),a("h3",{attrs:{id:"命名规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名规则"}},[t._v("#")]),t._v(" 命名规则")]),t._v(" "),a("p",[t._v("你应该或多或少听说过了变量名的命名规则，简单概括就是以下三点：")]),t._v(" "),a("ol",[a("li",[t._v("只能使用下划线 "),a("code",[t._v("_")]),t._v("，英文字母和数字。")]),t._v(" "),a("li",[t._v("不能以数字开头。")]),t._v(" "),a("li",[t._v("不能与 C/C++ 中的关键字冲突。")])]),t._v(" "),a("p",[t._v("直接来做些练习吧！下面哪些变量的命名是正确的？")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("ikun111")])]),t._v(" "),a("li",[a("code",[t._v("瓜瓜")])]),t._v(" "),a("li",[a("code",[t._v("___func")])]),t._v(" "),a("li",[a("code",[t._v("GenShin")])]),t._v(" "),a("li",[a("code",[t._v("a0##c")])]),t._v(" "),a("li",[a("code",[t._v("88liyunlong")])]),t._v(" "),a("li",[a("code",[t._v("まりさ")])]),t._v(" "),a("li",[a("code",[t._v("double")])]),t._v(" "),a("li",[a("code",[t._v("student_name")])]),t._v(" "),a("li",[a("code",[t._v("😓😓😓")])])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("查看答案")]),t._v(" "),a("p",[t._v("只有 "),a("code",[t._v("1，3，4，9")]),t._v(" 是正确的。")])]),t._v(" "),a("h3",{attrs:{id:"命名规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名规范"}},[t._v("#")]),t._v(" 命名规范")]),t._v(" "),a("p",[t._v("虽然变量的命名只要符合规则就可以通过编译了，但我还是要提醒你，在命名变量时，应该使用具有可读性的名字，如 "),a("code",[t._v("student_name")]),t._v(" 表示学生的名字， "),a("code",[t._v("teacherNum")]),t._v(" 表示老师的数量，避免使用一些无意义的名字如 "),a("code",[t._v("a1")]),t._v("，"),a("code",[t._v("wt")]),t._v(" 等。")]),t._v(" "),a("p",[t._v("然而，变量的名字也应该尽可能短，以便于拼写和记忆，过长的名字会给输入带来麻烦，尤其是一些很常用的变量，如 for 循环中的循环变量，因此，我们往往约定俗称，使用单个字母 "),a("code",[t._v("i")]),t._v(" 来表示循环变量；一些局部变量，如函数参数，也会使用单个字母来命名。总之，这是一个需要你自己把握的问题。")]),t._v(" "),a("p",[t._v("通常而言，我们也不会使用下划线 "),a("code",[t._v("_")]),t._v(" 来命名变量，尤其是以 "),a("code",[t._v("_")]),t._v(" 开头的变量，因为这是 C/C++ 头文件和库的命名风格，我们应该避免与之冲突。")]),t._v(" "),a("h2",{attrs:{id:"类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型"}},[t._v("#")]),t._v(" 类型")]),t._v(" "),a("p",[t._v("生活中几乎处处都存在着分类。走进图书馆里查阅图书时，你肯定看到过书架上有序而严谨的分类标签，通过这些标签你很快就能找到你想要的书本；走在路上，你可能时不时会遇到可爱的小猫，尽管它们外貌形态各异，但它们都享有相同的生物学上的分类——猫科猫属（一些题外话：虽然小猫很可爱，但我个人还是更喜欢小狗~摊牌了！！我就是犬控🥵🥵🥵！）。分类在生活学习和科学研究中起着非常重要的作用。")]),t._v(" "),a("p",[t._v("在 C/C++ 中，我们依据变量所储存的数据的类型来对其进行分类。变量的类型有很多种，幸运的是，你只需要掌握以下 5 种类型就能处理现阶段会出现的所有问题了。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("示例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("int")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("整型，表示整数")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("2")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("double")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("浮点型，表示实数")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("2.5")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("char")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("字符型，表示单个字符")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("'x'")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("string")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("字符串型，表示一个字符串")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v('"a short string"')])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("bool")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("布尔类型，表示布尔代数")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("true")])])])])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("C 语言中没有 "),a("code",[t._v("string")]),t._v(" 类型和 "),a("code",[t._v("bool")]),t._v(" 类型，因此，你得用一些不同的方法来解决问题。后面会介绍在面对相关问题时，只使用 C 语言的处理方法。")])]),t._v(" "),a("p",[t._v("上面的表格的实例中，给出了不同类型的具体的值，我们称之为"),a("strong",[t._v("字面量")]),t._v("。在不需要数据存储的场景中，我们可以偷个懒，省略掉变量的定义和初始化，直接使用字面量进行算术计算或其他操作。显然，不同类型的字面量有其不同的风格。")]),t._v(" "),a("h3",{attrs:{id:"int-型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#int-型"}},[t._v("#")]),t._v(" int 型")]),t._v(" "),a("p",[t._v("int 型的字面量直接用整数来表示。此外若整数前有前缀 "),a("code",[t._v("0")]),t._v(" 时，其表示一个八进制数；整数前有前缀 "),a("code",[t._v("0x")]),t._v(" 或 "),a("code",[t._v("0X")]),t._v(" 时，其表示十六进制数。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("631")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//十进制数 -631。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("031")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//有前缀 0，表示八进制数 31。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xA0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//有前缀 0x，表示十六进制数 A0。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0XAbCdd0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//有前缀 0X，表示十六进制数 AbCdd0。")]),t._v("\n")])])]),a("p",[t._v("尽管在十六进制数的表示中，大小写不敏感，但我建议你使用小写前缀 0x 和大写字母 ABCDEF 来表示数字，并保持良好的代码风格。上面的变量 "),a("code",[t._v("d")]),t._v(" 的字面量就是一个合法但很糟糕的写法。")]),t._v(" "),a("h3",{attrs:{id:"浮点型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮点型"}},[t._v("#")]),t._v(" 浮点型")]),t._v(" "),a("p",[t._v("浮点型是用来存储实数一种类型。表示浮点数时，你的数字中必须带有小数点 "),a("code",[t._v(".")]),t._v("，否则计算机会将其视为整型。反之，只要数字中带有 "),a("code",[t._v("小数点")]),t._v("，就会被视为浮点型。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//浮点数 0 的表示方法，需要特别注意，不要漏掉小数点。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("受制于浮点数的精度限制，在进行某些计算时，浮点数并不是总能精确地计算出结果。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14159265358979324684")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setprecision")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//setprecision 用于修改浮点数输出时显示的小数位数，其包含于头文件 iomanip 中。")]),t._v("\n")])])]),a("p",[t._v("运行以上的代码时会输出：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//我们嵌入的结果：3.14159265358979324684")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14159265358979311599796346854")]),t._v("\n")])])]),a("p",[t._v("代码：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setprecision")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("输出：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.300000000000000044408920985006")]),t._v("\n")])])]),a("p",[t._v("尽管如此，在一定范围内，浮点数的计算结果还是准确的，因此你可以放心地使用它来进行计算。")]),t._v(" "),a("h3",{attrs:{id:"char-型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#char-型"}},[t._v("#")]),t._v(" char 型")]),t._v(" "),a("p",[t._v("char 型表示单个字符，其字面量需要用单引号 "),a("code",[t._v("'")]),t._v(" 包起来。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'+'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("字符是一个非常复杂的东西，这里我不深入地去介绍了。在这里，你只需要注意，char 型只能存储 "),a("a",{attrs:{href:""}},[t._v("ASCII 码")]),t._v(" 内的字符，非 ASCII 码字符是无法放进 char 里面的，例如中文、日文字符，中文的全角符号 "),a("code",[t._v("；")]),t._v("，"),a("code",[t._v("！")]),t._v("，"),a("code",[t._v("？")]),t._v("，"),a("code",[t._v("“")]),t._v("，"),a("code",[t._v("‘")]),t._v("，"),a("code",[t._v("。")]),t._v(" 等等。")]),t._v(" "),a("p",[t._v("此外，出于某些原因，我们用特殊的记号来代表某些字符，这类字符我们称为"),a("strong",[t._v("转义字符")]),t._v("。使用转义字符主要是为了便于编程的时候输入一些不易输入的字符，如空字符，换行符，或者是为了避免与我们编程语言中的特殊记号冲突，如字符字面量的提示符单引号 "),a("code",[t._v("'")]),t._v("，甚至转义字符中的反斜杠 "),a("code",[t._v("\\")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'\\n'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//换行符。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'\\t'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//制表符，相当于 tab 键。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'\\0'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//空字符，在 ASCII 码中的值为 0。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'\\''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//单引号。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" e "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'\\\"'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//双引号。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" f "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'\\\\'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//反斜杠。")]),t._v("\n")])])]),a("h3",{attrs:{id:"string-型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-型"}},[t._v("#")]),t._v(" string 型")]),t._v(" "),a("p",[t._v("string 型的字面量用双引号 "),a("code",[t._v('"')]),t._v(" 包起来。string 可以看作是由很多个 char 组成的，因此，你也不应往 string 里放入 char 不能放入的东西。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("string a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abcd"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstring b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"12345"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstring c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"+-*/"')]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("要使用 string 类型，需要在代码的头部引入头文件 "),a("code",[t._v("string")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<string>")])]),t._v("\n")])])])]),t._v(" "),a("h3",{attrs:{id:"bool-型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bool-型"}},[t._v("#")]),t._v(" bool 型")]),t._v(" "),a("p",[t._v("bool 型很简单，只需要使用 "),a("code",[t._v("true")]),t._v(" 和 "),a("code",[t._v("false")]),t._v(" 来分别表示真和假即可。注意别把 "),a("code",[t._v("true")]),t._v(" 拼成 "),a("code",[t._v("ture")]),t._v("，或者把 "),a("code",[t._v("false")]),t._v(" 给拼成 "),a("code",[t._v("flase")]),t._v(" 啦！")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);